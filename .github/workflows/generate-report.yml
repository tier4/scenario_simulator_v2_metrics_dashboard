name: Generate report

on:
  schedule:
    - cron: "0 19 * * 0" # run at 4 AM JST on Sundays
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  generate-report:
    runs-on: ubuntu-latest
    env:
      TARGET_REPO: "tier4/scenario_simulator_v2"
      ARTIFACTS_DIR: data
      BASE_URL: "https://tier4.github.io/scenario_simulator_v2_metrics_dashboard/"
      ROS_DISTRO: "galactic"
      REPOS_FILE: "dependency_galactic.repos"

    steps:
    - name: Clone target repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.TARGET_REPO }}

    - name: Clone this repo
      uses: actions/checkout@v2
      with:
        path: metrics_config_dir

    - name: Clone data branch in this repo
      uses: actions/checkout@v2
      with:
        ref: data
        path: ${{ env.ARTIFACTS_DIR }}

    - uses: ros-tooling/setup-ros@v0.6
      with:
        required-ros-distributions: ${{ env.ROS_DISTRO }}

    - name: List packages
      id: list_packages
      run: |
        package_list=$(colcon list --names-only)
        echo "::set-output name=package_list::$package_list"

    - name: Build and test
      uses: ros-tooling/action-ros-ci@v0.2
      id: build_and_test
      with:
        package-name: ${{ steps.list_packages.outputs.package_list }}
        target-ros2-distro: ${{ env.ROS_DISTRO }}
        vcs-repo-file-url: ${{ env.REPOS_FILE }}
        extra-cmake-args: -DCMAKE_CXX_FLAGS="-fprofile-arcs -ftest-coverage -DCOVERAGE_RUN=1" -DCMAKE_C_FLAGS="-fprofile-arcs -ftest-coverage -DCOVERAGE_RUN=1" -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DWITH_INTEGRATION_TEST=ON
        colcon-defaults: |
          {
            "build": {
              "mixin": ["coverage-gcc"]
            }
          }
        colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml

    - id: metrics-reporter
      uses: tier4/ros-metrics-reporter@main
      with:
        artifacts-dir: ${{ env.ARTIFACTS_DIR }}
        target-dir: ${{ steps.build_and_test.outputs.ros-workspace-directory-name }}
        base-url: ${{ env.BASE_URL }}
        title: ${{ env.TARGET_REPO }}
        ros-distro: ${{ env.ROS_DISTRO }}
        CCN: "20"
        CCN-recommendation: "10"
        nloc: "200"
        nloc-recommendation: "50"
        arguments: "6"
        arguments-recommendation: "6"
        codechecker-config-path: "metrics_config_dir/codechecker-config.json"
        codechecker-skip-list: "metrics_config_dir/codechecker-skip-list.txt"
        target-repository: ${{ env.TARGET_REPO }}

    - name: Push artifacts
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ env.ARTIFACTS_DIR }}
        publish_branch: data

    - name: Deploy public to gh-pages (main branch only)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: public
